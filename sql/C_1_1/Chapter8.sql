-- 65. 次の口座についてこれまでの取引の記録を取引テーブルから抽出する。抽出する項目は
--     口座番号、日付、取引事由名、取引金額とする。口座番号ごとに取引番号順で表示し、
--     取引事由名については取引事由テーブルから日本語名を取得する。取引金額には、
--     取引に応じて入金額か出金額のいずれか適切な方を表示すること。
--     ・口座番号: 0311240, 1234161, 2750902
SELECT ACCOUNT_CODE, DAY, DETAIL,
CASE WHEN DEPOSIT_AMOUNT IS NOT NULL AND WITHDRAWAL_AMOUNT IS NULL THEN DEPOSIT_AMOUNT
     WHEN DEPOSIT_AMOUNT IS NULL AND WITHDRAWAL_AMOUNT IS NOT NULL THEN WITHDRAWAL_AMOUNT
     WHEN DEPOSIT_AMOUNT IS NULL AND WITHDRAWAL_AMOUNT IS NULL THEN 0
     ELSE DEPOSIT_AMOUNT - WITHDRAWAL_AMOUNT
END AS TRAIDING_AMOUNT_RESULT
FROM TRAIDING
LEFT JOIN TRAIDING_DETAIL
ON TRAIDING.TRAIDING_DETAIL_ID = TRAIDING_DETAIL.ID
WHERE ACCOUNT_CODE IN('0311240', '1234161', '2750902')
ORDER BY ACCOUNT_CODE ASC; 

-- 66. 次の口座について、口座情報(口座番号、名義、残高)とこれまでの取引情報(日付、入金額、出金額)を一覧
--     として抽出する。一覧は、取引の古い順に表示すること。
--     ・口座番号：0887132
SELECT A.ACCOUNT_CODE, A.ACCOUNT_NAME, A.BALANCE, T.DAY, T.DEPOSIT_AMOUNT, T.WITHDRAWAL_AMOUNT
FROM ACCOUNT AS A
JOIN TRAIDING AS T
ON A.ACCOUNT_CODE = T.ACCOUNT_CODE
WHERE A.ACCOUNT_CODE = '0887132'
ORDER BY ACCOUNT_CODE DESC;

-- 67. 2020年3月1日に取引のあった口座番号の一覧を取得する。一覧には、口座テーブルより
--     名義と残高も表示すること。ただし、解約された口座については考慮しなくて良い。
SELECT ACCOUNT.ACCOUNT_CODE, ACCOUNT.ACCOUNT_NAME, ACCOUNT.BALANCE 
FROM ACCOUNT
JOIN TRAIDING
ON ACCOUNT.ACCOUNT_CODE = TRAIDING.ACCOUNT_CODE
LEFT JOIN ABOLISHMENT_ACCOUNT
ON ACCOUNT.ACCOUNT_CODE = ABOLISHMENT_ACCOUNT.ACCOUNT_CODE
WHERE TRAIDING.DAY = '2020-03-01' AND ABOLISHMENT_ACCOUNT.ACCOUNT_CODE IS NULL;

-- 68. 問題67では、すでに解約された口座については、該当の日付に取引があったにも関わらず抽出されなかった。
--     解約された口座ももれなく一覧に記載されるよう、SQL文を変更する。なお、解約口座については、名義に
--     「解約済み」、残高に0を表示すること。
SELECT ACCOUNT.ACCOUNT_CODE, 
CASE WHEN ACCOUNT.ACCOUNT_CODE IS NULL THEN '解約済み'
     ELSE ACCOUNT.ACCOUNT_NAME
END AS ACCOUNT_NAME,
ACCOUNT.BALANCE, TRAIDING.DAY
FROM ACCOUNT
RIGHT JOIN TRAIDING
ON ACCOUNT.ACCOUNT_CODE = TRAIDING.ACCOUNT_CODE
LEFT JOIN ABOLISHMENT_ACCOUNT
ON TRAIDING.ACCOUNT_CODE = ABOLISHMENT_ACCOUNT.ACCOUNT_CODE
WHERE TRAIDING.DAY = '2020-03-01';

-- 69. 取引テーブルのデータを抽出する。取引事由は「取引事由ID：取引事由名」の形式で表示し、
--     これまでに発生しなかった取引事由についても併せて記載されるようにすること。
SELECT TRAIDING.ACCOUNT_CODE,
CASE TRAIDING_DETAIL_ID WHEN 1 THEN '1:預入'
                        WHEN 2 THEN '2:引出'
                        WHEN 3 THEN '3:振込'
                        WHEN 4 THEN '4:通帳記入'
                        WHEN 5 THEN '5:残高照会'
                        WHEN 6 THEN '6:手数料引落'
                        ELSE '9:その他'
END AS '取引事由'
FROM TRAIDING;

-- 70. 取引テーブルと取引事由テーブルから、取引事由の一覧を抽出する。一覧には、取引事由IDと
--     取引事由名を記載する。なお、取引事由テーブルに存在しない事由で取引されている可能性、
--     および取引の実績のない事由が存在する可能性を考慮すること。
SELECT TRAIDING_DETAIL.ID, TRAIDING_DETAIL.DETAIL 
FROM TRAIDING
RIGHT JOIN TRAIDING_DETAIL
ON TRAIDING.TRAIDING_DETAIL_ID = TRAIDING_DETAIL.ID;

-- 71. 問題66について、取引事由名についても一覧に表示するよう、SQL文を変更する。取引事由名は
--     取引情報(日付、取引事由名、入金額、出金額)に表示する。
     -- 66. 次の口座について、口座情報（口座番号、名義、残高）とこれまでの取引情報（日付、
     --     入金額、出金額）を一覧として抽出する。一覧は、取引の古い順に表示すること。
     --     ・口座番号：0887132
SELECT ACCOUNT.ACCOUNT_CODE, ACCOUNT.ACCOUNT_NAME, ACCOUNT.BALANCE, 
TRAIDING.DAY, TRAIDING.DEPOSIT_AMOUNT, TRAIDING.WITHDRAWAL_AMOUNT, TRAIDING_DETAIL.DETAIL
FROM ACCOUNT
LEFT JOIN TRAIDING
ON ACCOUNT.ACCOUNT_CODE = TRAIDING.ACCOUNT_CODE
LEFT JOIN TRAIDING_DETAIL
ON TRAIDING.TRAIDING_DETAIL_ID = TRAIDING_DETAIL.ID
WHERE ACCOUNT.ACCOUNT_CODE = '0887132'
ORDER BY TRAIDING.DAY DESC;

-- 72. 現在の残高が500万円以上の口座について、2022年以降に1回の取引で100万円以上の金額が
--     入出金された実績を抽出する。抽出する項目は、口座番号、名義、残高、取引の日付、
--     取引事由ID、入金額、出金額とする。ただし副問合せは用いないこと。
SELECT A.ACCOUNT_CODE, A.ACCOUNT_NAME, A.BALANCE, T.DAY,
T.TRAIDING_DETAIL_ID, T.DEPOSIT_AMOUNT, T.WITHDRAWAL_AMOUNT
FROM ACCOUNT AS A
LEFT JOIN TRAIDING AS T
ON A.ACCOUNT_CODE = T.ACCOUNT_CODE
WHERE A.BALANCE >= 50000000 AND T.DAY >= '2022-01-01'
AND (T.WITHDRAWAL_AMOUNT >= 1000000 OR T.DEPOSIT_AMOUNT >= 1000000);

-- 73. 問題72で作成したSQL文について、結合相手に副問合せを利用するようSQL文を変更する。
SELECT A.ACCOUNT_CODE, A.ACCOUNT_NAME, A.BALANCE, T.DAY,
T.TRAIDING_DETAIL_ID, T.DEPOSIT_AMOUNT, T.WITHDRAWAL_AMOUNT
FROM ACCOUNT AS A
LEFT JOIN 
(SELECT * 
FROM TRAIDING 
WHERE DAY >= '2022-01-01' AND (WITHDRAWAL_AMOUNT >= 1000000 OR DEPOSIT_AMOUNT >= 1000000)) AS T
ON A.ACCOUNT_CODE = T.ACCOUNT_CODE
WHERE A.BALANCE >= 50000000;

-- 74. 取引テーブルから、同一の口座で同じ日に3回以上取引された実績のある口座番号とその回数を抽出する。
--     併せて、口座テーブルから名義を表示すること。
SELECT T.ACCOUNT_CODE, COUNT(T.ACCOUNT_CODE) AS COUNTS, A.ACCOUNT_NAME
FROM TRAIDING AS T 
LEFT JOIN ACCOUNT AS A
ON T.ACCOUNT_CODE = A.ACCOUNT_CODE
GROUP BY T.DAY ASC
HAVING COUNTS >= 3;

-- 75. この銀行では、口座テーブルの名寄せを行うことになった。同じ名義で複数の口座番号を持つ顧客について、
--     次の項目を持つ一覧を取得する。
--     ・名義、口座番号、種別、残高、更新日
--     一覧は名義のアイウエオ順、口座番号の小さい順に並べること。
SELECT B.ACCOUNT_NAME, B.ACCOUNT_CODE, B.TYPE, B.BALANCE, B.UPDATE_AT 
FROM (SELECT ACCOUNT_NAME, COUNT(ACCOUNT_NAME) 
AS COUNTS_NUM
FROM ACCOUNT 
GROUP BY ACCOUNT_NAME 
HAVING COUNT(ACCOUNT_NAME) > 1) AS A
LEFT JOIN ACCOUNT AS B
ON A.ACCOUNT_NAME = B.ACCOUNT_NAME
ORDER BY B.ACCOUNT_NAME ASC, B.ACCOUNT_CODE;